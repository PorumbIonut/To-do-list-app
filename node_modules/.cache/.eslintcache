[{"/Users/john/todolistapp/src/index.js":"1","/Users/john/todolistapp/src/reportWebVitals.js":"2","/Users/john/todolistapp/src/App.js":"3","/Users/john/todolistapp/src/components/Form.js":"4","/Users/john/todolistapp/src/components/Todolist.js":"5","/Users/john/todolistapp/src/components/Todo.js":"6"},{"size":288,"mtime":1630580575170,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1630580295759,"results":"9","hashOfConfig":"8"},{"size":1707,"mtime":1632431385992,"results":"10","hashOfConfig":"8"},{"size":1144,"mtime":1632429996389,"results":"11","hashOfConfig":"8"},{"size":450,"mtime":1632430052456,"results":"12","hashOfConfig":"8"},{"size":863,"mtime":1631909789975,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1cmginz",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/john/todolistapp/src/index.js",[],["28","29"],"/Users/john/todolistapp/src/reportWebVitals.js",[],"/Users/john/todolistapp/src/App.js",["30"],"import React, { useState, useEffect } from \"react\";\nimport './App.css';\n\n//importing components\nimport Form from \"./components/Form\";\nimport Todolist from \"./components/Todolist\";\n\nfunction App() {\n  //State Stuff\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  //functions\n\n  //run once when the app start\n /* useEffect(() => {\n    getLocalTodos();\n  }, []);*/\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  //Save local todos\n\n  const saveLocalTodos = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n  /*const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }\n    else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };*/\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>John's to do list</h1>\n      </header>\n      <Form inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText} setStatus={setStatus} />\n      <Todolist todos={todos} setTodos={setTodos} filteredTodos={filteredTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/john/todolistapp/src/components/Form.js",[],"/Users/john/todolistapp/src/components/Todolist.js",[],"/Users/john/todolistapp/src/components/Todo.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":23,"column":6,"nodeType":"37","endLine":23,"endColumn":21,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"44","text":"45"},[581,596],"[todos, status, filterHandler, saveLocalTodos]"]