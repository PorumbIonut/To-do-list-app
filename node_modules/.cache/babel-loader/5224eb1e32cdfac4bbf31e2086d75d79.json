{"ast":null,"code":"var _jsxFileName = \"/Users/john/todolistapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css'; //importing components\n\nimport Form from \"./components/Form\";\nimport Todolist from \"./components/Todolist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //State Stuff\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]); //functions\n  //run once when the app start\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }; //Save local todos\n\n\n  const saveLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }\n\n    const getLocalTodos = () => {\n      if (localStorage.getItem(\"todos\") === null) {\n        localStorage.setItem(\"todos\", JSON.stringify([]));\n      } else {\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"John's to do list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      inputText: inputText,\n      todos: todos,\n      setTodos: setTodos,\n      setInputText: setInputText,\n      setStatus: setStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todolist, {\n      todos: todos,\n      setTodos: setTodos,\n      filteredTodos: filteredTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"opYGpOTQJ7j5sKgoXtR+Um2kkaM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/john/todolistapp/src/App.js"],"names":["React","useState","useEffect","Form","Todolist","App","inputText","setInputText","todos","setTodos","status","setStatus","filteredTodos","setFilteredTodos","getLocalTodos","filterHandler","saveLocalTodos","filter","todo","completed","localStorage","getItem","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\n\n//importing components\nimport Form from \"./components/Form\";\nimport Todolist from \"./components/Todolist\";\n\nfunction App() {\n  //State Stuff\n  const [inputText, setInputText] = useState(\"\"); \n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  //functions\n\n  //run once when the app start\n  useEffect( () => {\n    getLocalTodos();\n  }, []);\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n  const filterHandler = () => {\n    switch(status) {\n       case 'completed':\n         setFilteredTodos(todos.filter(todo => todo.completed === true));\n         break;\n       case \"uncompleted\":\n         setFilteredTodos(todos.filter(todo => todo.completed === false));\n         break;\n       default:\n         setFilteredTodos(todos);\n         break;\n    }\n  };\n\n  //Save local todos\n\n  const saveLocalTodos = () => {\n    if(localStorage.getItem(\"todos\") === null)\n    {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }\n    else\n    {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }\n    const getLocalTodos = () => {\n        if(localStorage.getItem(\"todos\") === null)\n        {\n         localStorage.setItem(\"todos\", JSON.stringify([]));\n        }\n        else\n        {\n          localStorage.setItem(\"todos\", JSON.stringify(todos));\n        }\n    }\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <h1>John's to do list</h1>\n      </header>\n      <Form inputText = {inputText} todos = {todos} setTodos = {setTodos} setInputText = {setInputText} setStatus = {setStatus} />\n      <Todolist todos = {todos} setTodos = {setTodos} filteredTodos = {filteredTodos} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}